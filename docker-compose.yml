version: '3.8'

services:
  php-fpm:
    build:
      context: .
      dockerfile: ./.dockerfiles/dev/fpm/Dockerfile
    container_name: php-fpm
    volumes:
      - .:/var/www

  redis:
    image: redis:5.0.7
    container_name: redis-auth
    command: redis-server --appendonly yes
    ports:
      - 6379:6379

  database:
    image: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./.dockerfiles/dev/postgres/:/docker-entrypoint-initdb.d/

  web:
    image: nginx
    container_name: nginx
    volumes:
      - ./.dockerfiles/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www
    ports:
    - 80:80
    restart: always
    depends_on:
      - php-fpm
      - database

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog-auth
    restart: always
    env_file:
      - .env
    ports:
      - 1026:1025
      - 8026:8025

  composer:
    image: composer:latest
    container_name: composer
    command: bash -c "composer update --ignore-platform-reqs --no-interaction"
    restart: 'no'
    volumes:
      - ./:/app

  rabbit:
    container_name: ${RABBITMQ_HOST}
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - ./.data/rabbitmq/:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  consumer:
    build:
      context: .
      dockerfile: .dockerfiles/dev/cli/Dockerfile
    restart: always
    container_name: consumer
    volumes:
      - .:/app
      - ./.dockerfiles/dev/cli/supervisord.tmpl.conf:/etc/supervisor/conf.d/supervisord.conf
    working_dir: /app
    depends_on:
      - php-fpm
      - mailhog
    entrypoint:
      - bash
      - -c
      - /usr/bin/supervisord -n